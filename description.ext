/*
      ::: ::: :::             ::: :::             ::: 
     :+: :+:   :+:           :+:   :+:           :+:  
    +:+ +:+     +:+         +:+     +:+         +:+   
   +#+ +#+       +#+       +#+       +#+       +#+    
  +#+ +#+         +#+     +#+         +#+     +#+     
 #+# #+#           #+#   #+#           #+#   #+#      
### ###             ### ###             ### ###      

| AHOY WORLD | ARMA 3 ALPHA | STRATIS DOMI VER 2.7 |

Creating working missions of this complexity from
scratch is difficult and time consuming, please
credit http://www.ahoyworld.co.uk for creating and
distibuting this mission when hosting!

This version of Domination was lovingly crafted by
Jack Williams (Rarek) for Ahoy World!

//Better Radio Menu
#include "VON_PLUS_GUI\description.hpp"

------DEACTIVATED
*/

/* VAS includes */
#include "VAS\menu.hpp"
#include "scripts\vehicle\dialogs\common.hpp"
#include "DOM_squad\SquadManagement.hpp"

class CfgFunctions
{
	#include "VAS\cfgfunctions.hpp"
};

class RscTitles 
{
#include "hcam.hpp"
#include "scripts\vehicle\dialogs\namesleft.hpp"
#include "=BTC=_Logistic\=BTC=_Lift\=BTC=_Hud.h"
};

/* View Distance includes */
#include "settings\taw_vd\dialog.hpp"

class Header
{
  gameType = COOP;
  minPlayers = 1;
  maxPlayers = 40;
};

enableSaving = [false, false];

class Params
{
	class Perpetual
	{
		title = "Perpetual Mission Mode";
		values[] = {1,0};
		texts[] = {"On","Off"};
		default = 1;
	};

	class TimeOfDay
	{
		title = "Time of Day";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23};
		texts[] = {"00:00","01:00","02:00","03:00","04:00","05:00","06:00","07:00","08:00","09:00","10:00","11:00","12:00","13:00","14:00","15:00","16:00","17:00","18:00","19:00","20:00","21:00","22:00","23:00"};
		default = 5;
	};
	
	class Weather
	{
		title = "Starting Weather";
		values[] = {1,2,3,4};
		texts[] = {"Clear","Stormy","Cloudy","Foggy"};
		default = 1;
	};
	
	class DynamicWeather
	{
		title = "Enable Dynamic Weather?";
		values[] = {1,0};
		texts[] = {"Enabled","Disabled"};
		default = 1;
	};
	
	class BulletWind
	{
		title = "Enable Bullet Wind?";
		values[] = {1,0};
		texts[] = {"Enabled","Disabled"};
		default = 1;
	};
	
	class EnemyLeftThreshhold
	{
		title = "Enemy Left Threshhold";
		values[] = {1,2,3,4,5,6,7,8,9,10,15,20};
		texts[] = {"1","2","3","4","5","6","7","8","9","10","15","20"};
		default = 5;
	};

	class RadioTowerMineFieldChance
	{
		title = "Chance for minefield to spawn around Radio Tower?";
		values[] = {0,1,2,3,4,5,6,7,8,9,11};
		texts[] = {"0%","10%","20%","30%","40%","50%","60%","70%","80%","90%","100%"};
		default = 4;
	};
	
	class SideMissions
	{
		title = "Enable Side Missions?";
		values[] = {1,0};
		texts[] = {"Enabled","Disabled"};
		default = 1;
	};

	class SpawnProtection
	{
		title = "Spawn Protection Zone";
		values[] = {1,0};
		texts[] = {"Enabled","Disabled"};
		default = 1;
	};

	class AOSize
	{
		title = "Main AO Diameter";
		values[] = {200,300,400,500,600,700,800,900,1000,1200,1400,1600,1800,2000,2400,3000};
		texts[] = {"200m","300m","400m","500m","600m","700m","800m","900m","1,000m","1,200m","1,400m","1,600m","1,800m","2,000m","2,400m","3,000m"};
		default = 1000;
	};
	
	class VehicleHud
	{
		title = "Enable Vehicle Hud?";
		values[] = {1,0};
		texts[] = {"Enabled","Disabled"};
		default = 1;
	};	
	
	class RadioChannels
	{
		title = "Enable Custom Radio Channels?";
		values[] = {1,0};
		texts[] = {"Enabled","Disabled"};
		default = 0;
	};
	
	class ClassWeaponRestriction
	{
		title = "Enable Class Weapon Restriction?";
		values[] = {1,0};
		texts[] = {"Enabled","Disabled"};
		default = 1;
	};

	class PlayerMarkers
	{
		title = "Player markers on map";
		values[] = {1,0};
		texts[] = {"Enabled","Disabled"};
		default = 1;
	};

	class ViewDistance
	{
		title = "Player View Distance Dialog";
		values[] = {1,0};
		texts[] = {"Enabled","Disabled"};
		default = 1;
	};
	
	class tkPunishment
	{
		title = "Enable Team Kill Punishment?";
		values[] = {1,0};
		texts[] = {"Enabled","Disabled"};
		default = 1;
	};
	
	class HelmetCam
	{
		title = "Enable Helmet Cam?";
		values[] = {1,0};
		texts[] = {"Enabled","Disabled"};
		default = 1;
	};
	
	class TransportLogistic
	{
		title = "Enable Transport & Logistic?";
		values[] = {1,0};
		texts[] = {"Enabled","Disabled"};
		default = 1;
	};
	
	class VehicleRespawnDistance
	{
		title = "Distance from players that vehicles won't respawn";
		values[] = {5,10,50,100,200,300,400,500,1000,2000,5000,10000};
		texts[] = {"5m","10m","50m","100m","200m","300m","400m","500m","1km","2km","5km","10km"};
		default = 100;
	};

	class PilotsOnly
	{
		title = "Can only pilots fly & Vehicle Restriction?";
		values[] = {1,0};
		texts[] = {"Yes","No"};
		default = 1;
	};

	class ReviveEnabled
	{
		title = "Enable =BTC= Revive?";
		values[] = {1,0};
		texts[] = {"Yes","No"};
		default = 1;
	};
	
	class GroupsMenu
	{
		title = "Enable Groups Menu?";
		values[] = {1,0};
		texts[] = {"Yes","No"};
		default = 1;
	};
	
	class EngineerMenu
	{
		title = "Enable Engineer - Crewman Repair Menu?";
		values[] = {1,0};
		texts[] = {"Yes","No"};
		default = 1;
	};

	class EngineerMarkers
	{
		title = "Should Engineers see Repair icons on their screen?";
		values[] = {1,0};
		texts[] = {"Yes","No"};
		default = 1;
	};
	
	class MedicMarkers
	{
		title = "Should medics see revive icons on their screen?";
		values[] = {1,0};
		texts[] = {"Yes","No"};
		default = 0;
	};
	
	class EnemySkills
	{
		title = "Enable Enemy Skill Regulation?";
		values[] = {1,0};
		texts[] = {"Enabled","Disabled"};
		default = 1;
	};
	
	class AOReinforcement
	{
		title = "Enable AO Reinforcement Light Helicopter?";
		values[] = {1,0};
		texts[] = {"Enabled","Disabled"};
		default = 1;
	};
	
	class AOReinforcementJet
	{
		title = "Enable AO Reinforcement Jet?";
		values[] = {1,0};
		texts[] = {"Enabled","Disabled"};
		default = 0;
	};
	
	class AOReinforcementHeavyHelo
	{
		title = "Enable AO Reinforcement Heavy Attack Helicopter?";
		values[] = {1,0};
		texts[] = {"Enabled","Disabled"};
		default = 1;
	};
	
	class SideMissionReinforcement
	{
		title = "Enable Side Mission Reinforcement Helicopter?";
		values[] = {1,0};
		texts[] = {"Enabled","Disabled"};
		default = 1;
	};
	
	class FriendlyReinforcement
	{
		title = "Enable Friendly Mi-48 Reinforcement?";
		values[] = {1,0};
		texts[] = {"Enabled","Disabled"};
		default = 0;
	};
	
	class SquadsPatrol
	{
		title = "Squads Patrolling AO";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};
		texts[] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16};
		default = 9;
	};
	
	class ReconSquadsPatrol
	{
		title = "Squads Recon Patrolling AO";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};
		texts[] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16};
		default = 4;
	};
	
	class TeamsPatrol
	{
		title = "Teams Patrolling AO";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};
		texts[] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16};
		default = 6;
	};
	
	class SniperPatrol
	{
		title = "Sniper Squads Defending AO";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};
		texts[] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16};
		default = 2;
	};
	
	class TeamsMiniDronePatrol
	{
		title = "Teams with Mini Drone Patrolling AO";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};
		texts[] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16};
		default = 1;
	};
	
	class CarsPatrol
	{
		title = "Motorised Infantry Patrolling AO";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};
		texts[] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16};
		default = 2;
	};
	
	class ArmourPatrol
	{
		title = "Armoured Vehicles Patrolling AO";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};
		texts[] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16};
		default = 2;
	};
			
	class AirPatrol
	{
		title = "Air Vehicles Patrolling AO";
		values[] = {0,1,2,3,4,5,6,7,8,9,10};
		texts[] = {1,2,3,4,5,6,7,8,9,10};
		default = 3;
	};
	
	class Civilians
	{
		title = "Civilians on AO";
		values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15};
		texts[] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16};
		default = 0;
	};
	
	class MemberVehicles
	{
		title = "Enable Community & VIP Vehicles?";
		values[] = {1,0};
		texts[] = {"Enable","Disable"};
		default = 1;
	};
	
	class StartIntro
	{
		title = "Show Awesome Start Intro?";
		values[] = {1,0};
		texts[] = {"Yes","No"};
		default = 0;
	};
	
	class ClearBodys
	{
		title = "Clean Dead Bodys from World?";
		values[] = {1,0};
		texts[] = {"Enable","Disable"};
		default = 1;
	};
	
	class ClearItemsAndBodys
	{
		title = "Clean Items on Ground from World?";
		values[] = {1,0};
		texts[] = {"Enable","Disable"};
		default = 1;
	};
	
	class DebugMode
	{
		title = "Enable Debug Mode";
		values[] = {1,0};
		texts[] = {"Enable","Disable"};
		default = 0;
	};
	
	/* class VPG
   {
      title = "Number of Enemies";
      values[] = {0.25,0.5,0.75,1};
      texts[] = {"Few (Good for 1-2 Players)","Some (Good for 3-4 Players)","Many (Good for 5-6 Players)","There's too many! (Good for 7-8 Players)"};
      default = 0.5;
   }; */
};

class CfgNotifications
{
	class Default
	{
		title = ""; // Tile displayed as text on black background. Filled by arguments.
		iconPicture = ""; // Small icon displayed in left part. Colored by "color", filled by arguments.
		iconText = ""; // Short text displayed over the icon. Colored by "color", filled by arguments.
		description = ""; // Brief description displayed as structured text. Colored by "color", filled by arguments.
		color[] = {1,1,1,1}; // Icon and text color
		duration = 5; // How many seconds will the notification be displayed
		priority = 0; // Priority; higher number = more important; tasks in queue are selected by priority
		difficulty[] = {}; // Required difficulty settings. All listed difficulties has to be enabled
	};

	class NewMain
	{
		title = "NEW MAIN OBJECTIVE";
		description = "Take %1";
		iconPicture = "notificons\main_objective.paa";
		color[] = {1, 0.81, 0.06, 1};
		priority = 9;
	};

	class CompletedMain
	{
		title = "MAIN OBJECTIVE COMPLETE";
		description = "Taken %1";
		iconPicture = "notificons\main_objective_completed.paa";
		color[] = {1, 0.81, 0.06, 1};
		priority = 9;
	};

	class NewSub
	{
		title = "NEW SUB-OBJECTIVE";
		description = "%1";
		iconPicture = "notificons\sub_objective.paa";
		color[] = {1, 0.81, 0.06, 1};
		priority = 8;
	};
	
	class NewSubRadio
	{
		title = "NEW SUB-OBJECTIVE";
		description = "%1";
		iconPicture = "notificons\sub_radioTower.paa";
		color[] = {1, 0.81, 0.06, 1};
		priority = 8;
	};

	class CompletedSub
	{
		title = "SUB-OBJECTIVE COMPLETE";
		description = "%1";
		iconPicture = "notificons\sub_objective_completed.paa";
		color[] = {1, 0.81, 0.06, 1};
		priority = 8;
	};

	class NewSideMission
	{
		title = "NEW SIDE MISSION";
		iconPicture = "notificons\side_mission.paa";
		description = "%1";
		color[] = {0, 0.7, 0.93, 1};
		priority = 7;
	};
	
	class NewSideMissionChopper
	{
		title = "NEW SIDE MISSION";
		iconPicture = "notificons\smdestroyhelo.paa";
		description = "%1";
		color[] = {0, 0.7, 0.93, 1};
		priority = 7;
	};
	
	class NewSideMissionAPC
	{
		title = "NEW SIDE MISSION";
		iconPicture = "notificons\destroyAPC.paa";
		description = "%1";
		color[] = {0, 0.7, 0.93, 1};
		priority = 7;
	};
	
	class NewSideMissionRadar
	{
		title = "NEW SIDE MISSION";
		iconPicture = "notificons\smdestroyradar.paa";
		description = "%1";
		color[] = {0, 0.7, 0.93, 1};
		priority = 7;
	};

	class CompletedSideMission
	{
		title = "SIDE MISSION COMPLETE";
		iconPicture = "notificons\side_mission_completed.paa";
		description = "%1";
		color[] = {0, 0.7, 0.93, 1};
		priority = 7;
	};

	class NewPriorityTarget
	{
		title = "NEW PRIORITY TARGET";
		iconPicture = "notificons\priority_target.paa";
		description = "%1";
		color[] = {0.8, 0.13, 0.14, 1};
		priority = 10;
	};
	
	class CompletedPriorityTarget
	{
		title = "PRIORITY TARGET DOWN";
		iconPicture = "notificons\priority_target_neutralised.paa";
		description = "%1";
		color[] = {0.8, 0.13, 0.14, 1};
		priority = 10;
	};
	
	class EnemyHelo
	{
		title = "ENEMY HELICOPTER INBOUND";
		iconPicture = "notificons\heloinbound.paa";
		description = "%1";
		color[] = {0.8, 0.13, 0.14, 1};
		priority = 8;
	};
	
	class EnemyHeloDown
	{
		title = "ENEMY HELICOPTER NEUTRALIZED";
		iconPicture = "notificons\down.paa";
		description = "%1";
		color[] = {1, 0.81, 0.06, 1};
		priority = 8;
	};
	
	class EnemyJetDown
	{
		title = "ENEMY HELICOPTER NEUTRALIZED";
		iconPicture = "notificons\down.paa";
		description = "%1";
		color[] = {1, 0.81, 0.06, 1};
		priority = 8;
	};
	
	class EnemyHeavyHelo
	{
		title = "ENEMY HELICOPTER INBOUND";
		iconPicture = "notificons\heavyheliinbound.paa";
		description = "%1";
		color[] = {0.8, 0.13, 0.14, 1};
		priority = 8;
	};
	
	class EnemyJet
	{
		title = "ENEMY JET INBOUND";
		iconPicture = "notificons\enemyJetinbound.paa";
		description = "%1";
		color[] = {0.8, 0.13, 0.14, 1};
		priority = 8;
	};
	
	class NewSideMissionJet
	{
		title = "NEW SIDE MISSION";
		iconPicture = "notificons\enemyJetinbound.paa";
		description = "%1";
		color[] = {0.8, 0.13, 0.14, 1};
		priority = 8;
	};
	
	class EnemyHeavyHeloDown
	{
		title = "ENEMY HELICOPTER NEUTRALIZED";
		iconPicture = "notificons\down.paa";
		description = "%1";
		color[] = {1, 0.81, 0.06, 1};
		priority = 8;
	};
	
	class FriendlyHeavyHeloDown
	{
		title = "FRIENDLY HELO GOT NEUTRALIZED";
		iconPicture = "notificons\down.paa";
		description = "%1";
		color[] = {1, 0.81, 0.06, 1};
		priority = 8;
	};
	
	class SideMissionEnemys
	{
		title = "ENEMY REINFORCEMENT";
		iconPicture = "notificons\enemysidemission.paa";
		description = "%1";
		color[] = {0.8, 0.13, 0.14, 1};
		priority = 8;
	};
	
	class SideMissionEnemysDown
	{
		title = "REINFORCEMENT NEUTRALIZED";
		iconPicture = "notificons\down.paa";
		description = "%1";
		color[] = {1, 0.81, 0.06, 1};
		priority = 8;
	};

	class Reward
	{
		title = "TEAM REWARD";
		description = "%1";
		iconPicture = "notificons\reward.paa";
		color[] = {0.38, 0.81, 0.16, 1};
		priority = 6;
	};
	
	class FriendlyHelo
	{
		title = "FRIENDLY AIR SUPPORT";
		description = "%1";
		iconPicture = "notificons\reward.paa";
		color[] = {0.38, 0.81, 0.16, 1};
		priority = 6;
	};

	class ScoreBonus
	{
		title = "SCORE BONUS";
		description = "%1";
		iconPicture = "notificons\score_bonus.paa";
		iconText = "+%2";
		color[] = {0.38, 0.81, 0.16, 1};
		priority = 5;
	};
};

class CfgSounds
{
   sounds[] = {Vent,Para};
	
	class Vent {
	name="Vent";sound[]={ATM_Airdrop\data\vent.ogg,db-11,1.0};titles[] = {};
	};
class Para {
name="Para";sound[]={ATM_Airdrop\data\parachute.ogg,db-11,1.0};titles[] = {};
};

class my_alarm
	{
                //sounds[] = {my_alarm};
		name = "my_alarm";
		// filename, volume, pitch
                sound[] = {"VON_PLUS_GUI\Resources\static3.wss",5,1};
		titles[] = {};
	};
};

class CfgSFX
{
//This class name is used in the type parameter of the effect.
 class Transformer_SFX
 {
  name="TransformerSFX";
  sounds[]={"sound1"};
  // soundName[] = {"path to file", volume, pitch, max sound reach distance, probability of being played, min delay, average delay, maximum delay after the sound};
  sound1[]={"VON_PLUS_GUI\Resources\static2.wss",5,1,0,1,0,0,0};
  //empty[] = {not used, not used, not used, not used, not used, minimum pause, average pause, maximum pause};
  empty[]={"","","","","",0,0,0};
 };
};

/* class CfgSounds
{
	sounds[] = {};
	class contactDestroyChopper
	{
		name = "Contact: Destroy Chopper";
		sound[] = {"sm\contact_sounds\contactDestroyChopper.ogg", db+50, 1};
		titles[] = {};
	};
	
	class contactDestroySmallRadar
	{
		name = "Contact: Destroy Small Radar";
		sound[] = {"sm\contact_sounds\contactDestroySmallRadar.ogg", db+50, 1};
		titles[] = {};
	};
}; */

/* Adds screen when loading. */
author = AhoyWorld.co.uk | Edited by GamersCentral.de [GC];
onLoadName = "AW Invade & Annex";
loadScreen = "GamersCentral.de2.jpg";
OnLoadMission = "   Welcome to GamersCentral.de [GC] - [GCM]               - MHQ                                                                       - Helmet Cam                                                      - TK-Punishment                                                                                   - Dynamic Weather                                                                                                   - Logistic                                                                     - and much more...";

respawn = BASE;
respawnDelay = 4;
#include "=BTC=_revive\=BTC=_respawn.h"
respawnDialog = true;

disabledAI = true;

/*
disableChannels[] = {0,2,3,6}; 
disableChannels[] = {0, 1, 2};
*/